{{define "content"}}
    <canvas class="my-4 w-100" id="expensesGraph" width="900" height="380"></canvas>
    <script src="/static/Chart.min.js"></script>
    <script>
        (function () {
            'use strict'
            let ctx = document.getElementById('expensesGraph')
            let myChart = new Chart(ctx, {
                type: '{{.GraphData.Type}}',
                data: {
                    labels: [
                        {{range .GraphData.X}}
                        {{.}},
                        {{end}}
                    ],
                    datasets: [{
                        data: [
                            {{range .GraphData.Y}}
                            {{.Format}},
                            {{end}}
                        ],
                        lineTension: 0,
                        backgroundColor: [
                            {{range .GraphData.Z}}
                            '{{.}}',
                            {{end}}
                        ],
                    }]
                },
                options: {
                    tooltips: {
                        callbacks: {
                            title: function (tooltipItem, data) {
                                return data['labels'][tooltipItem[0]['index']];
                            },
                            label: function (tooltipItem, data) {
                                return data['datasets'][0]['data'][tooltipItem['index']] + ' €';
                            },
                            {{if eq .GraphData.Type "doughnut"}}
                            afterLabel: function (tooltipItem, data) {
                                var dataset = data['datasets'][0];
                                var percent = Math.round((dataset['data'][tooltipItem['index']] / dataset["_meta"][0]['total']) * 100)
                                return '(' + percent + '%)';
                            }
                            {{end}}
                        }
                    },
                    {{if eq .GraphData.Type "bar"}}
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true,
                                callback: function (value, index, values) {
                                    return value + ' €';
                                }
                            }
                        }]
                    },
                    {{end}}
                    legend: {
                        display: false
                    },
                }
            })
        })()
    </script>

    <ul class="list-group shadow-sm">
        {{range $i, $e := .GraphData.X}}
            <li class="list-group-item d-flex justify-content-between align-items-center">
                {{$e}}
                <span class="badge rounded-pill bg-secondary"
                      style="background-color: {{index $.GraphData.Z $i}}{{if eq $.GraphData.Type "doughnut"}}!important;{{end}}">
                    {{(index $.GraphData.Y $i).FormatWithCurrency}}
                </span>
            </li>
        {{end}}
        <li class="list-group-item d-flex justify-content-between align-items-center fw-bold">
            {{l10n "total"}}
            <span class="badge rounded-pill bg-primary">{{.GraphData.Total.FormatWithCurrency}}</span>
        </li>
    </ul>
{{end}}

{{define "options"}}
    <div class="btn-group shadow-sm">
        <button type="button" class="btn btn-sm btn-secondary dropdown-toggle" data-bs-toggle="dropdown">
            <span data-feather="calendar"></span>
            {{l10n (.GraphData.Filter)}}
        </button>
        <ul class="dropdown-menu">
            <li><a class="dropdown-item" href="{{.Path}}?filter=this_week">{{l10n "this_week"}}</a></li>
            <li><a class="dropdown-item" href="{{.Path}}?filter=this_month">{{l10n "this_month"}}</a></li>
            <li><a class="dropdown-item" href="{{.Path}}?filter=this_year">{{l10n "this_year"}}</a></li>
            <li>
                <hr class="dropdown-divider">
            </li>
            {{range .Years}}
                <li><a class="dropdown-item" href="{{$.Path}}?filter=year{{.}}">{{.}}</a></li>
            {{end}}
        </ul>
    </div>
{{end}}